- name: All avaliable hosts
  hosts: all
  become: true

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        state: present
        name: "{{ item }}"
        update_cache: true
      loop:
        - apt-transport-https
        - curl
        - ca-certificates
        - gnupg

    - name: Add repo
      ansible.builtin.deb822_repository:
        architectures: amd64
        name: postgresql
        components: main
        signed_by: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        targets:
          - "postgresql-{{ postgresql_version }}"
        uris: https://apt.postgresql.org/pub/repos/apt
        suites:
          - trixie-pgdg

  tasks:
    - name: Set OS-specific variables
      ansible.builtin.set_fact:
        pg_hba_path: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
        service_name: "postgresql"
      when: ansible_os_family == "Debian"

    - name: Find out if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "{{ pg_hba_path }}"
      register: postgres_data

    - name: Install PostgreSQL
      ansible.builtin.apt:
        update_cache: true
        name: "{{ item }}"
        auto_install_module_deps: true
      loop:
        - "{{ service_name }}-{{ postgresql_version }}"

    - name: Initialize PostgreSQL
      ansible.builtin.command: "pg_createcluster {{ postgresql_version }} main --port 5432"
      args:
        # команда не выполнится, если файл уже существует
        creates: "{{ pg_hba_path }}"  # Указывает, что файл создаётся командой
      when: ansible_os_family == "Debian" and not postgres_data.stat.exists

    - name: Start and enable services
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - "{{ service_name }}"

  handlers:
    - name: Restart Postgres
      ansible.builtin.systemd_service:
        name: "{{ service_name }}"
        state: restarted
